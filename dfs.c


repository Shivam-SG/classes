#include <stdio.h>
#define MAX 100

int adj[MAX][MAX]; // Adjacency matrix
int visited[MAX];
int n; // Number of vertices

// DFS function
void DFS(int vertex) {
    printf("%d ", vertex);
    visited[vertex] = 1;

    for (int i = 0; i < n; i++) {
        if (adj[vertex][i] && !visited[i]) {
            DFS(i);
        }
    }
}

int main() {
    int edges, src, dest, start;

    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter number of edges: ");
    scanf("%d", &edges);

    // Initialize adjacency matrix to 0
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            adj[i][j] = 0;

    // Input edges
    printf("Enter %d edges (source destination):\n", edges);
    for (int i = 0; i < edges; i++) {
        scanf("%d%d", &src, &dest);
        adj[src][dest] = 1;
        adj[dest][src] = 1; // For undirected graph
    }

    printf("Enter starting vertex for DFS: ");
    scanf("%d", &start);

    printf("DFS traversal: ");
    DFS(start);

    return 0;
}


Enter number of vertices: 5
Enter number of edges: 4
Enter 4 edges (source destination):
0 1
0 2
1 3
1 4
Enter starting vertex for DFS: 0
DFS traversal: 0 1 3 4 2